- accessLog:
  - filter:
      responseFlagFilter:
        flags:
        - NR
    name: envoy.access_loggers.file
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
      logFormat:
        textFormatSource:
          inlineString: |
            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
      path: /dev/stdout
  address:
    socketAddress:
      address: 0.0.0.0
      portValue: 15008
  connectionBalanceConfig:
    exactBalance: {}
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        accessLog:
        - filter:
            statusCodeFilter:
              comparison:
                op: GE
                value:
                  defaultValue: 400
                  runtimeKey: istio.io/unset
          name: envoy.access_loggers.file
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            logFormat:
              textFormatSource:
                inlineString: |
                  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
            path: /dev/stdout
        forwardClientCertDetails: APPEND_FORWARD
        http2ProtocolOptions:
          allowConnect: true
          connectionKeepalive:
            interval: 10s
            timeout: 20s
          maxConcurrentStreams: 100
        httpFilters:
        - name: waypoint_downstream_peer_metadata
          typedConfig:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            typeUrl: type.googleapis.com/io.istio.http.peer_metadata.Config
            value:
              downstream_discovery:
              - workload_discovery: {}
              shared_with_upstream: true
        - name: connect_authority
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.set_filter_state.v3.Config
            onRequestHeaders:
            - formatString:
                textFormatSource:
                  inlineString: '%REQ(:AUTHORITY)%'
              objectKey: envoy.filters.listener.original_dst.local_ip
              sharedWithUpstream: ONCE
            - factoryKey: envoy.string
              formatString:
                textFormatSource:
                  inlineString: '%REQ(:AUTHORITY)%'
              objectKey: io.istio.connect_authority
              sharedWithUpstream: ONCE
            - formatString:
                textFormatSource:
                  inlineString: '%DOWNSTREAM_REMOTE_ADDRESS%'
              objectKey: envoy.filters.listener.original_dst.remote_ip
              sharedWithUpstream: ONCE
            - factoryKey: envoy.string
              formatString:
                textFormatSource:
                  inlineString: '%DOWNSTREAM_PEER_URI_SAN%'
              objectKey: io.istio.peer_principal
              sharedWithUpstream: ONCE
            - factoryKey: envoy.string
              formatString:
                textFormatSource:
                  inlineString: '%DOWNSTREAM_LOCAL_URI_SAN%'
              objectKey: io.istio.local_principal
              sharedWithUpstream: ONCE
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        routeConfig:
          name: default
          virtualHosts:
          - domains:
            - '*'
            name: default
            routes:
            - match:
                connectMatcher: {}
              route:
                cluster: main_internal
                upgradeConfigs:
                - connectConfig: {}
                  upgradeType: CONNECT
        serverName: istio-envoy
        setCurrentClientCertDetails:
          dns: true
          subject: true
          uri: true
        statPrefix: connect_terminate
        streamIdleTimeout: 0s
        upgradeConfigs:
        - upgradeType: CONNECT
        useRemoteAddress: false
    name: default
    transportSocket:
      name: tls
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        commonTlsContext:
          alpnProtocols:
          - h2
          combinedValidationContext:
            defaultValidationContext:
              matchTypedSubjectAltNames:
              - matcher:
                  prefix: spiffe://cluster.local/
                sanType: URI
            validationContextSdsSecretConfig:
              name: ROOTCA
              sdsConfig:
                apiConfigSource:
                  apiType: GRPC
                  grpcServices:
                  - envoyGrpc:
                      clusterName: sds-grpc
                  setNodeOnFirstMessageOnly: true
                  transportApiVersion: V3
                initialFetchTimeout: 0s
                resourceApiVersion: V3
          tlsCertificateSdsSecretConfigs:
          - name: default
            sdsConfig:
              apiConfigSource:
                apiType: GRPC
                grpcServices:
                - envoyGrpc:
                    clusterName: sds-grpc
                setNodeOnFirstMessageOnly: true
                transportApiVersion: V3
              initialFetchTimeout: 0s
              resourceApiVersion: V3
          tlsParams:
            tlsMaximumProtocolVersion: TLSv1_3
            tlsMinimumProtocolVersion: TLSv1_3
        requireClientCertificate: true
  name: connect_terminate
- accessLog:
  - filter:
      responseFlagFilter:
        flags:
        - NR
    name: envoy.access_loggers.file
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
      logFormat:
        textFormatSource:
          inlineString: |
            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
      path: /dev/stdout
  filterChainMatcher:
    matcherTree:
      customMatch:
        name: ip
        typedConfig:
          '@type': type.googleapis.com/xds.type.matcher.v3.IPMatcher
          rangeMatchers:
          - onMatch:
              matcher:
                matcherTree:
                  exactMatchMap:
                    map:
                      "8000":
                        action:
                          name: inbound-vip|8000|http|httpbin.ambient.svc.cluster.local
                          typedConfig:
                            '@type': type.googleapis.com/google.protobuf.StringValue
                            value: inbound-vip|8000|http|httpbin.ambient.svc.cluster.local
                  input:
                    name: port
                    typedConfig:
                      '@type': type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DestinationPortInput
            ranges:
            - addressPrefix: 10.96.186.205
              prefixLen: 32
          - onMatch:
              matcher:
                matcherTree:
                  exactMatchMap:
                    map:
                      "8000":
                        action:
                          name: inbound-vip|8000|http|httpbin.not-ambient.svc.cluster.local
                          typedConfig:
                            '@type': type.googleapis.com/google.protobuf.StringValue
                            value: inbound-vip|8000|http|httpbin.not-ambient.svc.cluster.local
                  input:
                    name: port
                    typedConfig:
                      '@type': type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DestinationPortInput
            ranges:
            - addressPrefix: 10.96.67.136
              prefixLen: 32
      input:
        name: ip
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        accessLog:
        - name: envoy.access_loggers.file
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            logFormat:
              textFormatSource:
                inlineString: |
                  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
            path: /dev/stdout
        httpFilters:
        - name: envoy.filters.http.grpc_stats
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
            emitFilterState: true
            statsForAllMethods: false
        - name: envoy.filters.http.fault
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
        - name: envoy.filters.http.cors
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
        - name: waypoint_upstream_peer_metadata
          typedConfig:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            typeUrl: type.googleapis.com/io.istio.http.peer_metadata.Config
            value:
              upstream_discovery:
              - workload_discovery: {}
        - name: istio.stats
          typedConfig:
            '@type': type.googleapis.com/stats.PluginConfig
            disableHostHeaderFallback: true
            reporter: SERVER_GATEWAY
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        normalizePath: true
        pathWithEscapedSlashesAction: KEEP_UNCHANGED
        proxy100Continue: true
        requestIdExtension:
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
            useRequestIdForTraceSampling: true
        routeConfig:
          name: inbound-vip|8000|http|httpbin.ambient.svc.cluster.local
          validateClusters: false
          virtualHosts:
          - domains:
            - '*'
            name: inbound|http|8000
            routes:
            - decorator:
                operation: httpbin.ambient.svc.cluster.local:8000/*
              match:
                caseSensitive: true
                pathSeparatedPrefix: /get
              metadata:
                filterMetadata:
                  istio:
                    config: /apis/networking.istio.io/v1/namespaces/ambient/virtual-service/httpbin-0-istio-autogenerated-k8s-gateway
              name: ambient.httpbin.0
              route:
                cluster: inbound-vip|8000|http|httpbin.ambient.svc.cluster.local
                clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
                maxGrpcTimeout: 0s
                retryPolicy:
                  hostSelectionRetryMaxAttempts: "5"
                  numRetries: 2
                  retryHostPredicate:
                  - name: envoy.retry_host_predicates.previous_hosts
                    typedConfig:
                      '@type': type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                  retryOn: connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes
                timeout: 0s
        serverName: istio-envoy
        statPrefix: inbound_0.0.0.0_8000;
        streamIdleTimeout: 0s
        tracing:
          clientSampling:
            value: 100
          customTags:
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_effective_policy_id
            tag: istio.authorization.dry_run.allow_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_engine_result
            tag: istio.authorization.dry_run.allow_policy.result
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_effective_policy_id
            tag: istio.authorization.dry_run.deny_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_engine_result
            tag: istio.authorization.dry_run.deny_policy.result
          - literal:
              value: latest
            tag: istio.canonical_revision
          - literal:
              value: simple-http-waypoint
            tag: istio.canonical_service
          - literal:
              value: Kubernetes
            tag: istio.cluster_id
          - literal:
              value: cluster.local
            tag: istio.mesh_id
          - literal:
              value: ambient
            tag: istio.namespace
          overallSampling:
            value: 100
          randomSampling:
            value: 100
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: false
    name: inbound-vip|8000|http|httpbin.ambient.svc.cluster.local
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        accessLog:
        - name: envoy.access_loggers.file
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            logFormat:
              textFormatSource:
                inlineString: |
                  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
            path: /dev/stdout
        httpFilters:
        - name: envoy.filters.http.grpc_stats
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
            emitFilterState: true
            statsForAllMethods: false
        - name: envoy.filters.http.fault
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
        - name: envoy.filters.http.cors
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
        - name: waypoint_upstream_peer_metadata
          typedConfig:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            typeUrl: type.googleapis.com/io.istio.http.peer_metadata.Config
            value:
              upstream_discovery:
              - workload_discovery: {}
        - name: istio.stats
          typedConfig:
            '@type': type.googleapis.com/stats.PluginConfig
            disableHostHeaderFallback: true
            reporter: SERVER_GATEWAY
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        normalizePath: true
        pathWithEscapedSlashesAction: KEEP_UNCHANGED
        proxy100Continue: true
        requestIdExtension:
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
            useRequestIdForTraceSampling: true
        routeConfig:
          name: inbound-vip|8000|http|httpbin.not-ambient.svc.cluster.local
          validateClusters: false
          virtualHosts:
          - domains:
            - '*'
            name: inbound|http|8000
            routes:
            - decorator:
                operation: httpbin.not-ambient.svc.cluster.local:8000/*
              match:
                caseSensitive: true
                prefix: /
              metadata:
                filterMetadata:
                  istio:
                    config: /apis/networking.istio.io/v1/namespaces/ambient/virtual-service/httpbin-notambient-0-istio-autogenerated-k8s-gateway
              name: ambient.httpbin-notambient.0
              route:
                cluster: inbound-vip|8000|http|httpbin.not-ambient.svc.cluster.local
                clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
                maxGrpcTimeout: 0s
                retryPolicy:
                  hostSelectionRetryMaxAttempts: "5"
                  numRetries: 2
                  retryHostPredicate:
                  - name: envoy.retry_host_predicates.previous_hosts
                    typedConfig:
                      '@type': type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                  retryOn: connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes
                timeout: 0s
        serverName: istio-envoy
        statPrefix: inbound_0.0.0.0_8000;
        streamIdleTimeout: 0s
        tracing:
          clientSampling:
            value: 100
          customTags:
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_effective_policy_id
            tag: istio.authorization.dry_run.allow_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_engine_result
            tag: istio.authorization.dry_run.allow_policy.result
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_effective_policy_id
            tag: istio.authorization.dry_run.deny_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_engine_result
            tag: istio.authorization.dry_run.deny_policy.result
          - literal:
              value: latest
            tag: istio.canonical_revision
          - literal:
              value: simple-http-waypoint
            tag: istio.canonical_service
          - literal:
              value: Kubernetes
            tag: istio.cluster_id
          - literal:
              value: cluster.local
            tag: istio.mesh_id
          - literal:
              value: ambient
            tag: istio.namespace
          overallSampling:
            value: 100
          randomSampling:
            value: 100
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: false
    name: inbound-vip|8000|http|httpbin.not-ambient.svc.cluster.local
  - filters:
    - name: connect_authority
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.set_filter_state.v3.Config
        onNewConnection:
        - formatString:
            textFormatSource:
              inlineString: '%FILTER_STATE(envoy.filters.listener.original_dst.local_ip:PLAIN)%'
          objectKey: envoy.filters.listener.original_dst.local_ip
          sharedWithUpstream: ONCE
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/udpa.type.v1.TypedStruct
        typeUrl: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        value:
          enable_discovery: true
          protocol: istio-peer-exchange
    - name: istio.stats
      typedConfig:
        '@type': type.googleapis.com/stats.PluginConfig
        disableHostHeaderFallback: true
        reporter: SERVER_GATEWAY
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        accessLog:
        - name: envoy.access_loggers.file
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            logFormat:
              textFormatSource:
                inlineString: |
                  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
            path: /dev/stdout
        cluster: encap
        statPrefix: encap
    name: direct-tcp
  - filters:
    - name: connect_authority
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.set_filter_state.v3.Config
        onNewConnection:
        - formatString:
            textFormatSource:
              inlineString: '%FILTER_STATE(envoy.filters.listener.original_dst.local_ip:PLAIN)%'
          objectKey: envoy.filters.listener.original_dst.local_ip
          sharedWithUpstream: ONCE
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        accessLog:
        - name: envoy.access_loggers.file
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            logFormat:
              textFormatSource:
                inlineString: |
                  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
            path: /dev/stdout
        httpFilters:
        - name: envoy.filters.http.grpc_stats
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
            emitFilterState: true
            statsForAllMethods: false
        - name: envoy.filters.http.fault
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
        - name: envoy.filters.http.cors
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
        - name: waypoint_upstream_peer_metadata
          typedConfig:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            typeUrl: type.googleapis.com/io.istio.http.peer_metadata.Config
            value:
              upstream_discovery:
              - workload_discovery: {}
        - name: istio.stats
          typedConfig:
            '@type': type.googleapis.com/stats.PluginConfig
            disableHostHeaderFallback: true
            reporter: SERVER_GATEWAY
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        normalizePath: true
        pathWithEscapedSlashesAction: KEEP_UNCHANGED
        proxy100Continue: true
        requestIdExtension:
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
            useRequestIdForTraceSampling: true
        routeConfig:
          name: encap
          validateClusters: false
          virtualHosts:
          - domains:
            - '*'
            name: inbound|http|0
            routes:
            - decorator:
                operation: :0/*
              match:
                prefix: /
              name: default
              route:
                cluster: encap
                maxStreamDuration:
                  grpcTimeoutHeaderMax: 0s
                  maxStreamDuration: 0s
                retryPolicy:
                  numRetries: 2
                  retryOn: reset-before-request
                timeout: 0s
        serverName: istio-envoy
        statPrefix: inbound_0.0.0.0_0;
        streamIdleTimeout: 0s
        tracing:
          clientSampling:
            value: 100
          customTags:
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_effective_policy_id
            tag: istio.authorization.dry_run.allow_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_allow_shadow_engine_result
            tag: istio.authorization.dry_run.allow_policy.result
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_effective_policy_id
            tag: istio.authorization.dry_run.deny_policy.name
          - metadata:
              kind:
                request: {}
              metadataKey:
                key: envoy.filters.http.rbac
                path:
                - key: istio_dry_run_deny_shadow_engine_result
            tag: istio.authorization.dry_run.deny_policy.result
          - literal:
              value: latest
            tag: istio.canonical_revision
          - literal:
              value: simple-http-waypoint
            tag: istio.canonical_service
          - literal:
              value: Kubernetes
            tag: istio.cluster_id
          - literal:
              value: cluster.local
            tag: istio.mesh_id
          - literal:
              value: ambient
            tag: istio.namespace
          overallSampling:
            value: 100
          randomSampling:
            value: 100
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: false
    name: direct-http
  internalListener: {}
  listenerFilters:
  - name: envoy.filters.listener.original_dst
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
  - filterDisabled:
      destinationPortRange:
        end: 8001
        start: 8000
    name: envoy.filters.listener.http_inspector
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.http_inspector.v3.HttpInspector
  - filterDisabled:
      destinationPortRange:
        end: 8001
        start: 8000
    name: envoy.filters.listener.tls_inspector
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
      initialReadBufferSize: 512
  name: main_internal
  trafficDirection: INBOUND
- accessLog:
  - filter:
      responseFlagFilter:
        flags:
        - NR
    name: envoy.access_loggers.file
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
      logFormat:
        textFormatSource:
          inlineString: |
            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
      path: /dev/stdout
  filterChains:
  - filters:
    - name: envoy.filters.network.tcp_proxy
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        accessLog:
        - filter:
            responseFlagFilter:
              flags:
              - UF
          name: envoy.access_loggers.file
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            logFormat:
              textFormatSource:
                inlineString: |
                  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%
            path: /dev/stdout
        cluster: connect_originate
        statPrefix: connect_originate
        tunnelingConfig:
          hostname: '%DOWNSTREAM_LOCAL_ADDRESS%'
  internalListener: {}
  listenerFilters:
  - name: envoy.filters.listener.original_dst
    typedConfig:
      '@type': type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
  name: connect_originate
  useOriginalDst: false
- address:
    socketAddress:
      address: 0.0.0.0
      portValue: 15090
  bypassOverloadManager: true
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        routeConfig:
          virtualHosts:
          - domains:
            - '*'
            name: backend
            routes:
            - match:
                prefix: /stats/prometheus
              route:
                cluster: prometheus_stats
        statPrefix: stats
  ignoreGlobalConnLimit: true
  name: 0.0.0.0_15090
- address:
    socketAddress:
      address: 0.0.0.0
      portValue: 15021
  bypassOverloadManager: true
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        routeConfig:
          virtualHosts:
          - domains:
            - '*'
            name: backend
            routes:
            - match:
                prefix: /healthz/ready
              route:
                cluster: agent
        statPrefix: agent
  ignoreGlobalConnLimit: true
  name: 0.0.0.0_15021

